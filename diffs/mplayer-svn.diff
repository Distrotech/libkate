diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/man/cs/mplayer.1 mplayer-svn-with-kate/DOCS/man/cs/mplayer.1
--- mplayer-svn/DOCS/man/cs/mplayer.1	2008-03-14 13:26:39.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/man/cs/mplayer.1	2008-03-15 21:25:45.000000000 +0000
@@ -171,7 +171,7 @@
 MPlayer m√° displej na obrazovce (OSD) pro stavov√© informace, kr√°sn√© velk√©
 vyhlazen√© a st√≠novan√© titulky a vizu√°ln√≠ odezvu na povely z\ kl√°vesnice.
 Podporov√°ny jsou Evropsk√©/\:ISO8859\-1,2 (Bulharsk√©, Anglick√©, ƒåesk√©, atd),
-Cyrilick√© a Korejsk√© fonty spolu s 12 form√°ty titulk≈Ø (MicroDVD, SubRip, OGM,
+Cyrilick√© a Korejsk√© fonty spolu s 13 form√°ty titulk≈Ø (MicroDVD, SubRip, Kate, OGM,
 SubViewer, Sami, VPlayer, RT, SSA, AQTitle, JACOsub, PJS a n√°≈° vlastn√≠: MPsub) a
 tak√© DVD titulky (SPU proudy, VOBsub a Closed Captions).
 .PP
@@ -2068,6 +2068,12 @@
 Vytvo≈ô√≠ soubor dumpsub.smi v aktu√°ln√≠m adres√°≈ôi.
 .
 .TP
+.B \-dumpoggkatesub (pouze MPlayer)
+P≈ôevede zvolen√© titulky (urƒçen√© volbou \-sub) do ƒçasovƒõ orientovan√©ho
+Kate form√°tu.
+Vytvo≈ô√≠ soubor dumpsub.ogg v aktu√°ln√≠m adres√°≈ôi.
+.
+.TP
 .B \-dumpsrtsub (pouze MPlayer)
 P≈ôevede zvolen√© titulky (urƒçen√© volbou \-sub) do ƒçasovƒõ orientovan√©ho
 SubViewer (SRT) form√°tu.
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/man/de/mplayer.1 mplayer-svn-with-kate/DOCS/man/de/mplayer.1
--- mplayer-svn/DOCS/man/de/mplayer.1	2008-03-14 13:26:39.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/man/de/mplayer.1	2008-03-15 21:25:46.000000000 +0000
@@ -2173,6 +2173,12 @@
 Erstellt eine Datei dumpsub.smi im aktuellen Verzeichnis.
 .
 .TP
+.B \-dumpoggkatesub (MPlayer only)
+Konvertiert den (mit der \-sub-Option angegebenen) Untertitel in das
+zeitbasierende Kate-Untertitelformat.
+Erstellt eine Datei dumpsub.ogg im aktuellen Verzeichnis.
+.
+.TP
 .B \-dumpsrtsub (nur bei MPlayer)
 Konvertiert den (mit der \-sub\-Option angegebenen) Untertitel in das
 zeitbasierende SubViewer-Untertitelformat (SRT).
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/man/en/mplayer.1 mplayer-svn-with-kate/DOCS/man/en/mplayer.1
--- mplayer-svn/DOCS/man/en/mplayer.1	2008-03-14 13:26:40.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/man/en/mplayer.1	2008-03-15 21:25:47.000000000 +0000
@@ -166,9 +166,9 @@
 MPlayer has an onscreen display (OSD) for status information, nice big
 antialiased shaded subtitles and visual feedback for keyboard controls.
 European/\:ISO8859-1,2 (Hungarian, English, Czech, etc), Cyrillic and Korean
-fonts are supported along with 12 subtitle formats (MicroDVD, SubRip, OGM,
-SubViewer, Sami, VPlayer, RT, SSA, AQTitle, JACOsub, PJS and our own: MPsub) and
-DVD subtitles (SPU streams, VOBsub and Closed Captions).
+fonts are supported along with 13 subtitle formats (MicroDVD, SubRip, Kate,
+OGM, SubViewer, Sami, VPlayer, RT, SSA, AQTitle, JACOsub, PJS and our own: MPsub)
+and DVD subtitles (SPU streams, VOBsub and Closed Captions).
 .PP
 .B mencoder
 (MPlayer's Movie Encoder) is a simple movie encoder, designed to encode
@@ -2140,6 +2140,12 @@
 Creates a dumpsub.smi file in the current directory.
 .
 .TP
+.B \-dumpoggkatesub (MPlayer only)
+Convert the given subtitle (specified with the \-sub option) to the time-based
+Kate subtitle format.
+Creates a dumpsub.ogg file in the current directory.
+.
+.TP
 .B \-dumpsrtsub (MPlayer only)
 Convert the given subtitle (specified with the \-sub option) to the time-based
 SubViewer (SRT) subtitle format.
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/man/es/mplayer.1 mplayer-svn-with-kate/DOCS/man/es/mplayer.1
--- mplayer-svn/DOCS/man/es/mplayer.1	2008-03-14 13:26:40.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/man/es/mplayer.1	2008-03-15 21:25:48.000000000 +0000
@@ -183,8 +183,8 @@
 subtÌtulos grandes y bonitos con suavizado de bordes y realimentaciÛn visual de
 los controles con teclado.
 Tipos de letra Europeo/\:ISO8859\-1,2 (H˙ngaro, InglÈs, Checoslovaco, etc),
-CirÌlico y Koreano se soportan en 12 formatos de subtÌtulos (MicroDVD, SubRip,
-OGM, SubViewer, Sami, VPlayer, RT, SSA, AQTitle, JACOsub, PJS y el nuestro:
+CirÌlico y Koreano se soportan en 13 formatos de subtÌtulos (MicroDVD, SubRip,
+Kate, OGM, SubViewer, Sami, VPlayer, RT, SSA, AQTitle, JACOsub, PJS y el nuestro:
 MPsub) asÌ como subtÌtulos DVD (cadenas SPU, VOBsub y Closed Captions).
 .PP
 .B mencoder
@@ -1901,6 +1901,12 @@
 Crea un archivo dumpsub.smi en el directorio actual.
 .
 .TP
+.B \-dumpoggkatesub (MPlayer solamente)
+Convierte el subtÌtulo dado (especificado con la opciÛn \-sub) al formato
+de subtÌtulo basado en tiempo Kate.
+Crea un archivo dumpsub.ogg en el directorio actual.
+.
+.TP
 .B \-dumpsrtsub (MPlayer solamente)
 Convierte el subtÌtulo dado (especificado con la opciÛn \-sub) al formato
 de subtÌtulo basado en tiempo SubViewer (SRT).
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/man/fr/mplayer.1 mplayer-svn-with-kate/DOCS/man/fr/mplayer.1
--- mplayer-svn/DOCS/man/fr/mplayer.1	2008-03-14 13:26:40.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/man/fr/mplayer.1	2008-03-15 21:25:50.000000000 +0000
@@ -171,9 +171,9 @@
 informations, de belles et grandes polices lissÈes et des effets
 visuels pour confirmer les contrÙles au clavier. Les polices
 europÈennes/\:ISO8859\-1,2 (Hongroise, Anglaise, TchËque, etc),
-Cyrillique et CorÈenne sont gÈrÈs ainsi que 11 formats de
-sous-titres (MicroDVD, SubRip, OGM, SubViewer, Sami, VPlayer, RT,
-SSA, AQTitle, JACOsub, PJS et le nÙtre: MPsub) et les sous-titres
+Cyrillique et CorÈenne sont gÈrÈs ainsi que 13 formats de
+sous-titres (MicroDVD, SubRip, Kate, OGM, SubViewer, Sami, VPlayer,
+RT, SSA, AQTitle, JACOsub, PJS et le nÙtre: MPsub) et les sous-titres
 DVD (SPU streams, VobSub et Closed Captions).
 .PP
 .B mencoder
@@ -2246,6 +2246,12 @@
 CrÈe un fichier dumpsub.smi dans le rÈpertoire courant.
 .
 .TP
+.B \-dumpoggkatesub (MPlayer uniquement)
+Convertit les sous-titres donnÈs (via l'option \-sub) au format basÈ sur le
+temps Kate.
+CrÈe un fichier dumpsub.ogg dans le rÈpertoire courant.
+.
+.TP
 .B \-dumpsrtsub (MPlayer uniquement)
 Convertit les sous-titres donnÈs (via l'option \-sub) au format basÈ sur le
 temps SubViewer (SRT).
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/man/hu/mplayer.1 mplayer-svn-with-kate/DOCS/man/hu/mplayer.1
--- mplayer-svn/DOCS/man/hu/mplayer.1	2008-03-17 21:23:26.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/man/hu/mplayer.1	2008-03-17 21:24:02.000000000 +0000
@@ -168,8 +168,8 @@
 Az MPlayernek van onscreen display (OSD) funkciÛja is a st·tuszinform·ciÛk
 Ès a szÈp, ÈlsÌmÌtott, ·rnyÈkolt feliratok megjelenÌtÈsÈhez Ès a billenty˚zetrıl
 Èrkezı jelek visszajelzÈsÈhez. EurÛpai/\:ISO8859\-1,2 (magyar, angol, cseh, stb.),
-cirill Ès koreai bet˚tÌpusok mind t·mogatottak 12 felirat form·tummal (MicroDVD,
-SubRip, OGM, SubViewer, Sami, VPlayer, RT, SSA, AQTitle, JACOsub, PJS Ès a mi
+cirill Ès koreai bet˚tÌpusok mind t·mogatottak 13 felirat form·tummal (MicroDVD,
+SubRip, Kate, OGM, SubViewer, Sami, VPlayer, RT, SSA, AQTitle, JACOsub, PJS Ès a mi
 saj·tunk: MPsub) Ès DVD felirattal (SPU streams, VOBsub Ès Closed Captions)
 egyetemben.
 .PP
@@ -2150,6 +2150,12 @@
 Az aktu·lis kˆnyvt·rban hoz lÈtre egy dumpsub.smi f·jlt.
 .
 .TP
+.B \-dumpoggkatesub (csak MPlayer)
+A haszn·lt felirat (amit a \-sub opciÛ ad meg) idı alap˙ Kate form·tumba
+konvert·l·sa.
+Az aktu·lis kˆnyvt·rban hoz lÈtre egy dumpsub.ogg f·jlt.
+.
+.TP
 .B \-dumpsrtsub (csak MPlayer)
 A haszn·lt felirat (amit a \-sub opciÛ ad meg) idı alap˙ SubViewer form·tumba
 konvert·l·sa.
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/man/it/mplayer.1 mplayer-svn-with-kate/DOCS/man/it/mplayer.1
--- mplayer-svn/DOCS/man/it/mplayer.1	2008-03-14 13:26:40.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/man/it/mplayer.1	2008-03-15 21:25:52.000000000 +0000
@@ -173,7 +173,7 @@
 informazioni sullo stato, grandi e bei sottotitoli sfumati con antialias ed un
 riscontro visuale dei comandi da tastiera.
 Sono supportati font europei/\:ISO8859\-1,2 (Ungherese, Inglese, Ceco, etc),
-Cirillici e Coreani insieme a 12 formati di sottotitoli (MicroDVD, SubRip,
+Cirillici e Coreani insieme a 13 formati di sottotitoli (MicroDVD, SubRip, Kate,
 OGM, SubViewer, Sami, VPlayer, RT, SSA, AQTitle, JACOsub, PJS ed il nostro:
 MPsub) oltre ai sottotitoli dei DVD (flussi SPU, VOBsub e Closed Captions).
 .PP
@@ -2228,6 +2228,12 @@
 Crea un file dumpsub.smi nella directory corrente.
 .
 .TP
+.B \-dumpoggkatesub (solo MPlayer)
+Converti i sottotitoli (specificati con l'opzione \-sub) nel formato
+dei sottotitoli basato sul tempo Kate.
+Crea un file dumpsub.ogg nella directory corrente.
+.
+.TP
 .B \-dumpsrtsub (solo MPlayer)
 Converti i sottotitoli (specificati con l'opzione \-sub) nel formato
 dei sottotitoli basato sul tempo SubViever (SRT).
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/man/pl/mplayer.1 mplayer-svn-with-kate/DOCS/man/pl/mplayer.1
--- mplayer-svn/DOCS/man/pl/mplayer.1	2008-03-14 13:26:40.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/man/pl/mplayer.1	2008-03-15 21:25:53.000000000 +0000
@@ -211,7 +211,7 @@
 przy pomocy klawiatury i wy∂wietla ≥adne, duøe, antyaliasowane i cieniowane
 napisy.
 Obs≥ugiwane s± czcionki europejskie/\:ISO 8859\-1,2 (polskie, czeskie, angielskie
-itp.), koreaÒskie i cyrylica oraz 12 formatÛw napisÛw (MicroDVD, SubRip, OGM,
+itp.), koreaÒskie i cyrylica oraz 13 formatÛw napisÛw (MicroDVD, SubRip, Kate, OGM,
 SubViewer, Sami, VPlayer, RT, SSA, AQTitle, JACOsub, PJS i nasz w≥asny: MPsub)
 i napisÛw DVD (strumienie SPU, VOBSub i Closed Captions).
 .PP
@@ -1424,6 +1424,12 @@
 Tworzy w bieø±cym katalogu zbiÛr dumpsub.smi
 .
 .TP
+.B \-dumpoggkatesub (tylko MPlayer)
+Konwertuje podane (przy pomocy opcji \-sub) napisy na oparty na czasie format
+Kate.
+Tworzy w bieø±cym katalogu zbiÛr dumpsub.ogg
+.
+.TP
 .B \-dumpsrtsub (tylko MPlayer)
 Konwertuje podane (przy pomocy opcji \-sub) napisy na oparty na czasie format
 SubViewer (SRT).
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/man/ru/mplayer.1 mplayer-svn-with-kate/DOCS/man/ru/mplayer.1
--- mplayer-svn/DOCS/man/ru/mplayer.1	2008-03-14 13:26:40.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/man/ru/mplayer.1	2008-03-15 21:25:57.000000000 +0000
@@ -168,7 +168,7 @@
 MPlayer …Õ≈≈‘ onscreen display (OSD) ƒÃ— œ‘œ¬“¡÷≈Œ…— …Œ∆œ“Õ¡√…… œ ”œ”‘œ—Œ…… ,
 ¬œÃÿ€…» ”«Ã¡÷≈ŒŒŸ» ”’¬‘…‘“œ◊ ” ‘≈Œÿ¿ … ◊…⁄’¡ÃÿŒœ«œ œ‘ÀÃ…À¡ Œ¡ ÀÃ¡◊…¡‘’“ŒŸ≈ ÀœÕ¡ŒƒŸ.
 Â◊“œ–≈ ”À…≈/\:ISO8859\-1,2 (˜≈Œ«≈“”À…≈, ·Œ«Ã… ”À…≈, ˛≈€”À…≈, … ‘.ƒ.), Î…“…ÃÃ…ﬁ≈”À…≈ … Îœ“≈ ”À…≈
-€“…∆‘Ÿ ◊À’–≈ ” 12 ∆œ“Õ¡‘¡Õ… ”’¬‘…‘“œ◊ (MicroDVD, SubRip, OGM,
+€“…∆‘Ÿ ◊À’–≈ ” 13 ∆œ“Õ¡‘¡Õ… ”’¬‘…‘“œ◊ (MicroDVD, SubRip, Kate, OGM,
 SubViewer, Sami, VPlayer, RT, SSA, AQTitle, JACOsub, PJS … Œ¡€ ”œ¬”‘◊≈ŒŒŸ : MPsub) … 
 DVD ”’¬‘…‘“Ÿ (SPU streams, VOBsub … Closed Captions).
 .PP
@@ -2034,6 +2034,11 @@
 Ûœ⁄ƒ¡≈‘ ∆¡ Ã dumpsub.sm ◊ ‘≈À’›≈Õ À¡‘¡Ãœ«≈.
 .
 .TP
+.B \-dumpoggkatesub (‘œÃÿÀœ MPlayer)
+“≈œ¬“¡⁄’≈‘ ”’¬‘…‘“Ÿ (’À¡⁄¡ŒŒŸ≈ œ–√…≈  \-sub) ◊ œ”Œœ◊¡ŒŒŸ  Œ¡ ◊“≈Õ≈Œ… ∆œ“Õ¡‘ Kate.
+Ûœ⁄ƒ¡≈‘ ∆¡ Ã dumpsub.ogg ◊ ‘≈À’›≈Õ À¡‘¡Ãœ«≈.
+.
+.TP
 .B \-dumpsrtsub (‘œÃÿÀœ MPlayer)
 “≈œ¬“¡⁄’≈‘ ”’¬‘…‘“Ÿ (’À¡⁄¡ŒŒŸ≈ œ–√…≈  \-sub) ◊ œ”Œœ◊¡ŒŒŸ  Œ¡ ◊“≈Õ≈Œ… ∆œ“Õ¡‘
 SubViewer (SRT).
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/man/zh/mplayer.1 mplayer-svn-with-kate/DOCS/man/zh/mplayer.1
--- mplayer-svn/DOCS/man/zh/mplayer.1	2008-03-14 13:26:40.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/man/zh/mplayer.1	2008-03-15 21:26:03.000000000 +0000
@@ -175,7 +175,7 @@
 MPlayer ÂÖ∑Êúâ OSD(Â±è‰∏äÊòæÁ§∫) ÂäüËÉΩÊòæÁ§∫Áä∂ÊÄÅ‰ø°ÊÅØ, Êúâ
 ÊäóÈîØÈΩøÂ∏¶Èò¥ÂΩ±ÁöÑÊºÇ‰∫ÆÂ§ßÂ≠óÂπïÂíåÈîÆÁõòÊéßÂà∂ÁöÑÂèØËßÜÂèçÈ¶à„ÄÇ
 ÊîØÊåÅÁöÑÂ≠ó‰ΩìÂåÖÊã¨Ê¨ßÊ¥≤ËØ≠Áßç/\:ISO8859\-1,2 (ÂåàÁâôÂà©ËØ≠, Ëã±ËØ≠, Êç∑ÂÖãËØ≠Á≠âÁ≠â), 
-Ë•øÈáåÂ∞îËØ≠ÂíåÈü©ËØ≠, ÂèØ‰ª•Êí≠Êîæ 12 ÁßçÊ†ºÂºèÁöÑÂ≠óÂπïÊñá‰ª∂ (MicroDVD, SubRip, OGM,
+Ë•øÈáåÂ∞îËØ≠ÂíåÈü©ËØ≠, ÂèØ‰ª•Êí≠Êîæ 13 ÁßçÊ†ºÂºèÁöÑÂ≠óÂπïÊñá‰ª∂ (MicroDVD, SubRip, Kate OGM,
 SubViewer, Sami, VPlayer, RT, SSA, AQTitle, JACOsub, PJS 
 ÂèäÊàë‰ª¨Ëá™Â∑±ÁöÑ: MPsub) Âíå DVD Â≠óÂπï (SPU ÊµÅ, VOBsub ÂèäÈöêËóèÂºè CC Â≠óÂπï)„ÄÇ
 .PP
@@ -1993,6 +1993,11 @@
 Âú®ÂΩìÂâçÁöÑÁõÆÂΩï‰∏≠ÂàõÂª∫ dumpsub.smi Êñá‰ª∂„ÄÇ
 .
 .TP
+.B \-dumpoggkatesub (‰ªÖÁî®‰∫é MPlayer)
+ËΩ¨Êç¢ÁªôÂÆöÁöÑ(Áî± \-sub ÈÄâÈ°πÊåáÂÆöÁöÑ)Â≠óÂπïÊàê‰∏∫Âü∫‰∫éÊó∂Èó¥ÁöÑ Kate Â≠óÂπïÊ†ºÂºè„ÄÇ
+Âú®ÂΩìÂâçÁöÑÁõÆÂΩï‰∏≠ÂàõÂª∫ dumpsub.ogg Êñá‰ª∂„ÄÇ
+.
+.TP
 .B \-dumpsrtsub (‰ªÖÁî®‰∫é MPlayer)
 ËΩ¨Êç¢ÁªôÂÆöÁöÑ(Áî± \-sub ÈÄâÈ°πÊåáÂÆöÁöÑ)Â≠óÂπïÊàê‰∏∫Âü∫‰∫éÊó∂Èó¥ÁöÑ SubViewer (SRT) Â≠óÂπïÊ†ºÂºè„ÄÇ
 Âú®ÂΩìÂâçÁöÑÁõÆÂΩï‰∏≠ÂàõÂª∫ dumpsub.srt Êñá‰ª∂„ÄÇ
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/xml/cs/usage.xml mplayer-svn-with-kate/DOCS/xml/cs/usage.xml
--- mplayer-svn/DOCS/xml/cs/usage.xml	2008-03-14 13:26:41.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/xml/cs/usage.xml	2008-03-15 21:32:50.000000000 +0000
@@ -117,6 +117,7 @@
   <listitem><para>CC (closed caption)</para></listitem>
   <listitem><para>MicroDVD</para></listitem>
   <listitem><para>SubRip</para></listitem>
+  <listitem><para>Kate</para></listitem>
   <listitem><para>SubViewer</para></listitem>
   <listitem><para>Sami</para></listitem>
   <listitem><para>VPlayer</para></listitem>
@@ -141,6 +142,7 @@
   <listitem><para>MicroDVD: <option>-dumpmicrodvdsub</option></para></listitem>
   <listitem><para>JACOsub: <option>-dumpjacosub</option></para></listitem>
   <listitem><para>Sami: <option>-dumpsami</option></para></listitem>
+  <listitem><para>Kate: <option>-dumpoggkatesub</option></para></listitem>
 </itemizedlist>
 </para>
 
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/xml/de/usage.xml mplayer-svn-with-kate/DOCS/xml/de/usage.xml
--- mplayer-svn/DOCS/xml/de/usage.xml	2008-03-14 13:26:41.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/xml/de/usage.xml	2008-03-15 21:32:59.000000000 +0000
@@ -117,6 +117,7 @@
       <listitem><para>CC (closed caption)</para></listitem>
       <listitem><para>MicroDVD</para></listitem>
       <listitem><para>SubRip</para></listitem>
+      <listitem><para>Kate</para></listitem>
       <listitem><para>SubViewer</para></listitem>
       <listitem><para>Sami</para></listitem>
       <listitem><para>VPlayer</para></listitem>
@@ -138,6 +139,7 @@
       <listitem><para>MicroDVD: <option>-dumpmicrodvdsub</option></para></listitem>
       <listitem><para>JACOsub: <option>-dumpjacosub</option></para></listitem>
       <listitem><para>Sami: <option>-dumpsami</option></para></listitem>
+      <listitem><para>Kate: <option>-dumpoggkatesub</option></para></listitem>
     </itemizedlist>
   </para>
 
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/xml/en/usage.xml mplayer-svn-with-kate/DOCS/xml/en/usage.xml
--- mplayer-svn/DOCS/xml/en/usage.xml	2008-03-14 13:26:42.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/xml/en/usage.xml	2008-03-15 21:33:02.000000000 +0000
@@ -118,6 +118,7 @@
   <listitem><para>CC (closed caption)</para></listitem>
   <listitem><para>MicroDVD</para></listitem>
   <listitem><para>SubRip</para></listitem>
+  <listitem><para>Kate</para></listitem>
   <listitem><para>SubViewer</para></listitem>
   <listitem><para>Sami</para></listitem>
   <listitem><para>VPlayer</para></listitem>
@@ -142,6 +143,7 @@
   <listitem><para>MicroDVD: <option>-dumpmicrodvdsub</option></para></listitem>
   <listitem><para>JACOsub: <option>-dumpjacosub</option></para></listitem>
   <listitem><para>Sami: <option>-dumpsami</option></para></listitem>
+  <listitem><para>Kate: <option>-dumpoggkatesub</option></para></listitem>
 </itemizedlist>
 </para>
 
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/xml/fr/usage.xml mplayer-svn-with-kate/DOCS/xml/fr/usage.xml
--- mplayer-svn/DOCS/xml/fr/usage.xml	2008-03-14 13:26:42.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/xml/fr/usage.xml	2008-03-15 21:33:22.000000000 +0000
@@ -117,6 +117,7 @@
 <listitem><para>CC (closed caption)</para></listitem>
 <listitem><para>MicroDVD</para></listitem>
 <listitem><para>SubRip</para></listitem>
+<listitem><para>Kate</para></listitem>
 <listitem><para>SubViewer</para></listitem>
 <listitem><para>Sami</para></listitem>
 <listitem><para>VPlayer</para></listitem>
@@ -139,6 +140,7 @@
 <listitem><para>MicroDVD: <option>-dumpmicrodvdsub</option></para></listitem>
 <listitem><para>JACOsub: <option>-dumpjacosub</option></para></listitem>
 <listitem><para>Sami: <option>-dumpsami</option></para></listitem>
+<listitem><para>Kate: <option>-dumpoggkatesub</option></para></listitem>
 </itemizedlist>
 </para>
 
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/xml/hu/usage.xml mplayer-svn-with-kate/DOCS/xml/hu/usage.xml
--- mplayer-svn/DOCS/xml/hu/usage.xml	2008-03-14 13:26:42.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/xml/hu/usage.xml	2008-03-15 21:33:24.000000000 +0000
@@ -119,6 +119,7 @@
   <listitem><para>CC (closed caption)</para></listitem>
   <listitem><para>MicroDVD</para></listitem>
   <listitem><para>SubRip</para></listitem>
+  <listitem><para>Kate</para></listitem>
   <listitem><para>SubViewer</para></listitem>
   <listitem><para>Sami</para></listitem>
   <listitem><para>VPlayer</para></listitem>
@@ -143,6 +144,7 @@
   <listitem><para>MicroDVD: <option>-dumpmicrodvdsub</option></para></listitem>
   <listitem><para>JACOsub: <option>-dumpjacosub</option></para></listitem>
   <listitem><para>Sami: <option>-dumpsami</option></para></listitem>
+  <listitem><para>Kate: <option>-dumpoggkatesub</option></para></listitem>
 </itemizedlist>
 </para>
 
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/xml/it/usage.xml mplayer-svn-with-kate/DOCS/xml/it/usage.xml
--- mplayer-svn/DOCS/xml/it/usage.xml	2008-03-14 13:26:43.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/xml/it/usage.xml	2008-03-15 21:33:26.000000000 +0000
@@ -120,6 +120,7 @@
   <listitem><para>CC (closed caption)</para></listitem>
   <listitem><para>MicroDVD</para></listitem>
   <listitem><para>SubRip</para></listitem>
+  <listitem><para>Kate</para></listitem>
   <listitem><para>SubViewer</para></listitem>
   <listitem><para>Sami</para></listitem>
   <listitem><para>VPlayer</para></listitem>
@@ -144,6 +145,7 @@
   <listitem><para>MicroDVD: <option>-dumpmicrodvdsub</option></para></listitem>
   <listitem><para>JACOsub: <option>-dumpjacosub</option></para></listitem>
   <listitem><para>Sami: <option>-dumpsami</option></para></listitem>
+  <listitem><para>Kate: <option>-dumpoggkatesub</option></para></listitem>
 </itemizedlist>
 </para>
 
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/xml/pl/usage.xml mplayer-svn-with-kate/DOCS/xml/pl/usage.xml
--- mplayer-svn/DOCS/xml/pl/usage.xml	2008-03-14 13:26:43.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/xml/pl/usage.xml	2008-03-15 21:33:28.000000000 +0000
@@ -118,6 +118,7 @@
   <listitem><para>CC (closed caption)</para></listitem>
   <listitem><para>MicroDVD</para></listitem>
   <listitem><para>SubRip</para></listitem>
+  <listitem><para>Kate</para></listitem>
   <listitem><para>SubViewer</para></listitem>
   <listitem><para>Sami</para></listitem>
   <listitem><para>VPlayer</para></listitem>
@@ -142,6 +143,7 @@
   <listitem><para>MicroDVD: <option>-dumpmicrodvdsub</option></para></listitem>
   <listitem><para>JACOsub: <option>-dumpjacosub</option></para></listitem>
   <listitem><para>Sami: <option>-dumpsami</option></para></listitem>
+  <listitem><para>Kate: <option>-dumpoggkatesub</option></para></listitem>
 </itemizedlist>
 </para>
  
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/DOCS/xml/ru/usage.xml mplayer-svn-with-kate/DOCS/xml/ru/usage.xml
--- mplayer-svn/DOCS/xml/ru/usage.xml	2008-03-14 13:26:43.000000000 +0000
+++ mplayer-svn-with-kate/DOCS/xml/ru/usage.xml	2008-03-15 21:33:30.000000000 +0000
@@ -121,6 +121,7 @@
   <listitem><para>CC (closed caption[—Å–∫—Ä—ã—Ç—ã–µ —Ç–∏—Ç—Ä—ã])</para></listitem>
   <listitem><para>MicroDVD</para></listitem>
   <listitem><para>SubRip</para></listitem>
+  <listitem><para>Kate</para></listitem>
   <listitem><para>SubViewer</para></listitem>
   <listitem><para>Sami</para></listitem>
   <listitem><para>VPlayer</para></listitem>
@@ -143,6 +144,7 @@
  <listitem><para>MicroDVD: <option>-dumpmicrodvdsub</option></para></listitem>
  <listitem><para>JACOsub: <option>-dumpjacosub</option></para></listitem>
  <listitem><para>Sami: <option>-dumpsami</option></para></listitem>
+ <listitem><para>Kate: <option>-dumpoggkatesub</option></para></listitem>
 </itemizedlist>
 </para>
 
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/Makefile mplayer-svn-with-kate/Makefile
--- mplayer-svn/Makefile	2008-03-14 13:27:00.000000000 +0000
+++ mplayer-svn-with-kate/Makefile	2008-03-22 22:19:56.000000000 +0000
@@ -33,6 +33,7 @@
               subopt-helper.c \
               subreader.c \
               vobsub.c \
+              katedec.c \
 
 SRCS_COMMON-$(UNRAR_EXEC) += unrar_exec.c
 
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/cfg-mplayer.h mplayer-svn-with-kate/cfg-mplayer.h
--- mplayer-svn/cfg-mplayer.h	2008-03-14 13:26:39.000000000 +0000
+++ mplayer-svn-with-kate/cfg-mplayer.h	2008-03-15 20:49:21.000000000 +0000
@@ -299,6 +299,7 @@
 	{"dumpmicrodvdsub", &stream_dump_type, CONF_TYPE_FLAG, 0, 0, 7, NULL},
 	{"dumpjacosub", &stream_dump_type, CONF_TYPE_FLAG, 0, 0, 8, NULL},
 	{"dumpsami", &stream_dump_type, CONF_TYPE_FLAG, 0, 0, 9, NULL},
+	{"dumpoggkatesub", &stream_dump_type, CONF_TYPE_FLAG, 0, 0, 10, NULL},
 
 #ifdef HAVE_LIRC
 	{"lircconf", &lirc_configfile, CONF_TYPE_STRING, CONF_GLOBAL, 0, 0, NULL},
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/command.c mplayer-svn-with-kate/command.c
--- mplayer-svn/command.c	2008-03-14 13:26:39.000000000 +0000
+++ mplayer-svn-with-kate/command.c	2008-06-15 12:32:44.000000000 +0100
@@ -28,6 +28,7 @@
 #include "libmpcodecs/dec_video.h"
 #include "vobsub.h"
 #include "spudec.h"
+#include "katedec.h"
 #include "get_path.h"
 #ifdef USE_TV
 #include "stream/tv.h"
@@ -1470,6 +1471,8 @@
 		sh_sub_t *sh = d_sub->sh;
 		if (sh->type == 'v')
 		    init_vo_spudec();
+		if (sh->type == 'k')
+		    katedec_reset();
 #ifdef USE_ASS
 		else if (ass_enabled)
 		    ass_track = sh->ass_track;
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/configure mplayer-svn-with-kate/configure
--- mplayer-svn/configure	2008-03-17 21:23:27.000000000 +0000
+++ mplayer-svn-with-kate/configure	2008-06-15 13:36:08.000000000 +0100
@@ -304,6 +304,7 @@
   --disable-libvorbis       disable libvorbis support [autodetect]
   --disable-speex           disable Speex support [autodetect]
   --enable-theora           enable OggTheora libraries [autodetect]
+  --enable-kate             enable Kate libraries [autodetect]
   --enable-faad-external    enable external FAAD2 (AAC) [autodetect]
   --disable-faad-internal   disable internal FAAD2 (AAC) [autodetect]
   --enable-faad-fixed       enable fixed-point mode in internal FAAD2 [disabled]
@@ -565,6 +566,7 @@
 _libvorbis=auto
 _speex=auto
 _theora=auto
+_kate=auto
 _mp3lib=yes
 _liba52=yes
 _libdca=auto
@@ -913,6 +915,8 @@
   --disable-tremor-external)	_tremor_external=no	;;
   --enable-theora)	_theora=yes	;;
   --disable-theora)	_theora=no	;;
+  --enable-kate)	_kate=yes	;;
+  --disable-kate)	_kate=no	;;
   --enable-mp3lib)	_mp3lib=yes	;;
   --disable-mp3lib)	_mp3lib=no	;;
   --enable-liba52)	_liba52=yes	;;
@@ -5991,6 +5995,61 @@
 fi
 echores "$_theora"
 
+echocheck "Kate support"
+if test "$_kate" = auto ; then
+  _kate=no
+    cat > $TMPC << EOF
+#include <kate/kate.h>
+#include <kate/oggkate.h>
+#include <string.h>
+int main(void) 
+{ 
+  ogg_packet op;
+  kate_packet kp;
+  kate_comment kc;
+  kate_info ki;
+  kate_state k;
+  const kate_event *ev;
+  int r;
+  double t;
+
+  kate_info_init (&ki);
+  kate_comment_init (&kc);
+ 
+  return 0;
+
+  /* we don't want to execute this kind of nonsense; just for making sure
+   * that compilation works... */
+  memset(&op, 0, sizeof(op));
+  r = kate_ogg_decode_headerin (&ki, &kc, &op);
+  r = kate_decode_headerin (&ki, &kc, &kp);
+  r = kate_decode_init (&k, &ki);
+  t = kate_granule_time (&ki, op.granulepos);
+  r = kate_decode_packetin (&k, &op);
+  r = kate_decode_eventout (&k, &ev);
+  r = kate_high_decode_init(&k);
+  kate_clear (&k);
+
+  return 0;
+}
+EOF
+  for _ld_kate in "`$_pkg_config --silence-errors --libs --cflags oggkate`" "-loggkate -lkate -logg"; do
+    cc_check $_ld_kate && _ld_extra="$_ld_extra $_ld_kate" \
+                         && _kate=yes && break
+  done
+fi
+if test "$_kate" = yes ; then
+  _def_kate='#define HAVE_OGGKATE 1'
+  _codecmodules="libkate $_codecmodules"
+  # when --enable-kate is forced, we'd better provide a probably sane
+  # $_ld_kate than nothing
+  test -z "$_ld_kate" && _ld_extra="$_ld_extra -loggkate -lkate -logg"
+else
+  _def_kate='#undef HAVE_OGGKATE'
+  _nocodecmodules="libkate $_nocodecmodules"
+fi
+echores "$_kate"
+
 echocheck "internal mp3lib support"
 if test "$_mp3lib" = yes ; then
   _def_mp3lib='#define USE_MP3LIB 1'
@@ -7790,6 +7849,7 @@
 LIBMAD = $_mad
 LIBVORBIS = $_vorbis
 LIBTHEORA = $_theora
+LIBKATE = $_kate
 FAAD_INTERNAL = $_faad_internal
 FAAD_FIXED = $_faad_fixed
 LIBSMBCLIENT = $_smbsupport
@@ -8476,6 +8536,9 @@
 /* enable OggTheora support */
 $_def_theora
 
+/* enable Kate support */
+$_def_kate
+
 /* enable FAAD (AAC) support */
 $_def_faad
 $_def_faad_internal
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/katedec.c mplayer-svn-with-kate/katedec.c
--- mplayer-svn/katedec.c	1970-01-01 01:00:00.000000000 +0100
+++ mplayer-svn-with-kate/katedec.c	2008-06-15 13:45:53.000000000 +0100
@@ -0,0 +1,176 @@
+/* Katedec.c
+
+   ogg.k.ogg.k@googlemail.com
+
+   For information on the Kate format see:
+   <URL:http://wiki.xiph.org/index.php/OggKate>
+
+ */
+#include "config.h"
+#include "mp_msg.h"
+
+#include <errno.h>
+#include <limits.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <unistd.h>
+#include <string.h>
+#include <math.h>
+#include "libvo/sub.h"
+#include "libvo/video_out.h"
+#include "spudec.h"
+#include "katedec.h"
+#include "libavutil/avutil.h"
+#include "libswscale/swscale.h"
+
+#ifdef HAVE_OGGKATE
+#include <kate/kate.h>
+#endif
+
+#ifdef HAVE_OGGKATE
+
+static int katedec_has_kin=0;
+static kate_tracker katedec_kin;
+static unsigned char *katedec_image=NULL;
+static unsigned char *katedec_y=NULL;
+static unsigned char *katedec_a=NULL;
+
+/* worked out the format mplayer expects, it's YA on 2 8 bit planes - UV aren't used */
+static inline int katedec_color_to_y(kate_color kc)
+{
+  /* adapted from vobsub.c */
+  return ( 0.299 * kc.r + 0.587 * kc.g + 0.114 * kc.b) * 219 / 255 + 16.5;
+}
+
+static inline int frob_alpha(int a)
+{
+  /* spudec.c says:
+     In mplayer's alpha planes, 0 is transparent, then 1 is nearly
+     opaque upto 255 which is transparent */
+  if (a>0) return 256-a;
+  return 0;
+}
+
+#endif
+
+void katedec_draw(unsigned int dxs, unsigned int dys, void (*draw_alpha)(int x0,int y0, int w,int h, unsigned char* src, unsigned char *srca, int stride))
+{
+#ifdef HAVE_OGGKATE
+  if (katedec_has_kin) {
+    int xpos = katedec_kin.has.region ? (int)(katedec_kin.region_x+0.5f) : 0;
+    int ypos = katedec_kin.has.region ? (int)(katedec_kin.region_y+0.5f) : 0;
+    const kate_bitmap *kb=katedec_kin.event->bitmap;
+    const kate_palette *kp=katedec_kin.event->palette;
+    size_t w=kb->width;
+    size_t h=kb->height;
+    size_t stride = (w+7)&~7; /* seen a comment somewhere saying 8 alignment is needed */
+
+    if (!katedec_image) {
+      size_t n,src,x,l;
+
+      mp_msg (MSGT_FIXME, MSGL_DBG2, "creating kate_bitmap\n");
+
+      katedec_image = malloc(2*stride*h);
+      if (!katedec_image) {
+        mp_msg (MSGT_FIXME, MSGL_WARN, "kate: failed to allocate %u bytes\n", 2*stride*h);
+        return;
+      }
+      katedec_y=katedec_image;
+      katedec_a=katedec_image+stride*h;
+
+      n=0;
+      src=0;
+      for (l=0; l<h; ++l) {
+        for (x=0; x<w; ++x) {
+          kate_color kc=kp->colors[kb->pixels[src]];
+          katedec_y[n]=katedec_color_to_y(kc);
+
+          /* odd, weird, and makes it work - for me at least */
+          katedec_y[n] = kc.r;
+          if (katedec_y[n] + kc.a <= 255) katedec_y[n] = 256 - katedec_y[n];
+
+          katedec_a[n]=frob_alpha(kc.a);
+          ++n;
+          ++src;
+        }
+        while (x++<stride) {
+          katedec_y[n]=0;
+          katedec_a[n]=0;
+          ++n;
+        }
+      }
+    }
+
+    draw_alpha(xpos,ypos,w,h,katedec_y,katedec_a,stride);
+  }
+#endif
+}
+
+int katedec_decode(sh_sub_t *sh, sh_video_t *sh_video, subtitle *subs, int nbytes, unsigned char *data)
+{
+#ifdef HAVE_OGGKATE
+    kate_packet kp;
+    const kate_event *ev;
+    int ret;
+
+    mp_msg (MSGT_FIXME, MSGL_DBG2, "kate: decoding %d byte packet from %p\n", nbytes, sh);
+
+    kate_packet_wrap(&kp, nbytes, data);
+    ret = kate_high_decode_packetin(sh->k, &kp, &ev);
+    if (ret < 0) {
+      mp_msg (MSGT_FIXME, MSGL_WARN, "kate_high_decode_packetin failed to decode %d byte packet: %d\n", nbytes, ret);
+      return -1;
+    }
+    if (ret > 0) {
+      mp_msg (MSGT_FIXME, MSGL_INFO, "Kate headers decoded, ready\n");
+    }
+
+    if (ev) {
+      /* kate supports overlapping subtitles, but we don't support this here,
+         so clear subtitles when we add another one, in case */
+      /*if (endpts == MP_NOPTS_VALUE)*/
+      sub_clear_text(subs, MP_NOPTS_VALUE);
+      katedec_reset();
+
+      if (ev->text) {
+        sub_utf8 = 1;
+        sub_add_text(subs, ev->text, ev->len0, ev->end_time);
+        vo_osd_changed(OSDTYPE_SUBTITLE);
+      }
+      if (ev->bitmap && ev->palette) {
+        kate_tracker_init(&katedec_kin, ev->ki, ev);
+        kate_tracker_update(&katedec_kin, 0.0f, sh_video->disp_w,sh_video->disp_h, 0, 0, sh_video->disp_w,sh_video->disp_h);
+        katedec_has_kin=1;
+        vo_osd_changed(OSDTYPE_KATE);
+      }
+    }
+#endif
+    return 0;
+}
+
+void katedec_reset()
+{
+#ifdef HAVE_OGGKATE
+  if (katedec_has_kin) {
+    kate_tracker_clear(&katedec_kin);
+    free(katedec_image);
+    katedec_image=NULL;
+    katedec_y=NULL;
+    katedec_a=NULL;
+    katedec_has_kin=0;
+    vo_osd_changed(OSDTYPE_KATE);
+  }
+#endif
+}
+
+void katedec_tick(sh_sub_t *sh, double pts)
+{
+#ifdef HAVE_OGGKATE
+  if (katedec_has_kin) {
+    if (pts >= katedec_kin.event->end_time) {
+      katedec_reset();
+    }
+  }
+#endif
+}
+
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/katedec.h mplayer-svn-with-kate/katedec.h
--- mplayer-svn/katedec.h	1970-01-01 01:00:00.000000000 +0100
+++ mplayer-svn-with-kate/katedec.h	2008-06-15 13:44:01.000000000 +0100
@@ -0,0 +1,12 @@
+#ifndef MPLAYER_KATEDEC_H
+#define MPLAYER_KATEDEC_H
+
+#include "libvo/video_out.h"
+#include "libmpdemux/stheader.h"
+
+extern int katedec_decode(sh_sub_t *sh, sh_video_t *sh_video, subtitle *subs, int nbytes, unsigned char *data);
+extern void katedec_draw(unsigned int dxs, unsigned int dys, void (*draw_alpha)(int x0,int y0, int w,int h, unsigned char* src, unsigned char *srca, int stride));
+extern void katedec_reset();
+extern void katedec_tick(sh_sub_t *sh, double pts);
+
+#endif /* MPLAYER_KATEDEC_H */
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/libmpdemux/demux_mkv.c mplayer-svn-with-kate/libmpdemux/demux_mkv.c
--- mplayer-svn/libmpdemux/demux_mkv.c	2008-03-14 13:26:57.000000000 +0000
+++ mplayer-svn-with-kate/libmpdemux/demux_mkv.c	2008-06-14 20:17:40.000000000 +0100
@@ -128,7 +128,7 @@
   mkv_content_encoding_t *encodings;
   int num_encodings;
 
-  /* For VobSubs and SSA/ASS */
+  /* For VobSubs, SSA/ASS and Kate */
   sh_sub_t *sh_sub;
 } mkv_track_t;
 
@@ -1016,7 +1016,9 @@
             }
           else if (!strcmp (track->codec_id, MKV_S_TEXTASCII))
             track->subtitle_type = MATROSKA_SUBTYPE_TEXT;
-          if (!strcmp (track->codec_id, MKV_S_TEXTUTF8))
+          else if (!strcmp (track->codec_id, MKV_S_KATE))
+            track->subtitle_type = MATROSKA_SUBTYPE_KATE;
+          else if (!strcmp (track->codec_id, MKV_S_TEXTUTF8))
             {
               track->subtitle_type = MATROSKA_SUBTYPE_TEXT;
             }
@@ -2203,6 +2205,8 @@
         sh->type = 'v';
       if (track->subtitle_type == MATROSKA_SUBTYPE_SSA)
         sh->type = 'a';
+      else if (track->subtitle_type == MATROSKA_SUBTYPE_KATE)
+        sh->type = 'k';
       size = track->private_size;
       m = demux_mkv_decode (track,track->private_data,&buffer,&size,2);
       if (buffer && m)
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/libmpdemux/demux_ogg.c mplayer-svn-with-kate/libmpdemux/demux_ogg.c
--- mplayer-svn/libmpdemux/demux_ogg.c	2008-03-14 13:26:57.000000000 +0000
+++ mplayer-svn-with-kate/libmpdemux/demux_ogg.c	2008-06-15 12:59:38.000000000 +0100
@@ -32,6 +32,11 @@
 extern int _ilog (unsigned int); /* defined in many places in theora/lib/ */
 #endif
 
+#ifdef HAVE_OGGKATE
+#include <kate/kate.h>
+#include <kate/oggkate.h>
+#endif
+
 #define BLOCK_SIZE 4096
 
 /* Theora decoder context : we won't be able to interpret granule positions
@@ -106,6 +111,7 @@
   int vorbis;
   int speex;
   int theora;
+  int kate;
   int flac;
   int text;
   int id;
@@ -113,6 +119,8 @@
   vorbis_info      vi;
   int vi_initialized;
 
+  int gshift;
+
   void *ogg_d;
 } ogg_stream_t;
 
@@ -157,7 +165,7 @@
 static subtitle ogg_sub;
 //FILE* subout;
 
-void demux_ogg_add_sub (ogg_stream_t* os,ogg_packet* pack) {
+static void demux_ogg_add_sub (ogg_stream_t* os,ogg_packet* pack) {
   int lcv;
   char *packet = pack->packet;
 
@@ -293,6 +301,17 @@
 	*pts = (double)os->lastpos / (double)os->samplerate;
      }
 #endif /* HAVE_OGGTHEORA */
+# ifdef HAVE_OGGKATE
+  } else if (os->kate) {
+	if (pack->granulepos >= 0)
+	{
+          int64_t base, offset;
+	  base = pack->granulepos >> os->gshift;
+	  offset = pack->granulepos - (base << os->gshift);
+          *pts = (double)(base+offset) / (double)os->samplerate;
+	}
+
+#endif /* HAVE_OGGKATE */
   } else if (os->flac) {
      /* we pass complete packets to flac, mustn't strip the header! */
      if (os->flac == 2 && pack->packet[0] != 0xff)
@@ -449,6 +468,7 @@
       demux_ogg_add_sub(os,pack);
     return 0;
   }
+
   if (os->speex) {
     // discard first two packets, they contain the header and comment
     if (os->hdr_packets < 2) {
@@ -458,9 +478,9 @@
   } else
   // If packet is an header we jump it except for vorbis and theora
   // (PACKET_TYPE_HEADER bit doesn't even exist for theora ?!)
-  // We jump nothing for FLAC. Ain't this great? Packet contents have to be
-  // handled differently for each and every stream type. The joy! The joy!
-  if(!os->flac && (*pack->packet & PACKET_TYPE_HEADER) && 
+  // We jump nothing for FLAC or Kate. Ain't this great? Packet contents have to
+  // be handled differently for each and every stream type. The joy! The joy!
+  if(!os->flac && !os->kate && (*pack->packet & PACKET_TYPE_HEADER) && 
      (ds != d->audio || ((sh_audio_t*)ds->sh)->format != FOURCC_VORBIS || os->hdr_packets >= NUM_VORBIS_HDR_PACKETS ) &&
      (ds != d->video || (((sh_video_t*)ds->sh)->format != FOURCC_THEORA)))
     return 0;
@@ -477,6 +497,29 @@
   if (!data)
     return 0;
 
+  // for Kate headers, we can't just ds_add_packet the packet because MPlayer will
+  // helpfully clear the subtitles packet queue before starting polling it, so we
+  // never get those, so we pass them to libakte now, apart from the first one,
+  // which was already eaten when probing
+  if (ds == d->sub && ds->sh && ((sh_sub_t*)ds->sh)->type == 'k') {
+    sh_sub_t *sh = d->s_streams[id];
+    if (pack->bytes>0 && (pack->packet[0] & 0x80) && pack->packet[0]!=0x80) {
+      kate_packet kp;
+      int ret;
+
+      kate_packet_wrap(&kp, pack->bytes, pack->packet);
+      ret = kate_high_decode_packetin(sh->k, &kp, NULL);
+      if (ret<0) {
+        mp_msg(MSGT_DEMUX,MSGL_WARN,"kate_high_decode_packetin failed: %d\n", ret);
+      }
+      return 0;
+    }
+    else {
+      /* we do not forward events for non active streams */
+      if (dvdsub_id != sh->sid) return 0;
+    }
+  }
+
   /// Clear subtitles if necessary (for broken files)
   if (sub_clear_text(&ogg_sub, pts)) {
     vo_sub = &ogg_sub;
@@ -754,6 +797,7 @@
   ogg_packet pack;
   sh_audio_t* sh_a;
   sh_video_t* sh_v;
+  sh_sub_t* sh_s;
 
 #ifdef USE_ICONV
   subcp_open(NULL);
@@ -816,6 +860,7 @@
     // Reset our vars
     sh_a = NULL;
     sh_v = NULL;
+    sh_s = NULL;
 
     ogg_d->subs[ogg_d->num_sub].ogg_d = ogg_d;
 
@@ -895,6 +940,62 @@
 	theora_comment_clear(&cc);
 	theora_info_clear(&inf);
 #   endif /* HAVE_OGGTHEORA */
+#   ifdef HAVE_OGGKATE
+    } else if (pack.bytes >= 8 && !strncmp (&pack.packet[1], "kate\0\0\0", 7)) {
+	int ret;
+
+        sh_s = new_sh_sub_sid(demuxer, ogg_d->num_sub, ogg_d->n_text);
+        sh_s->type = 'k';
+
+        sh_s->k = (kate_state*)malloc(sizeof(kate_state));
+        ret = kate_high_decode_init(sh_s->k);
+        if (ret<0) {
+	    mp_msg(MSGT_DEMUX,MSGL_ERR,"Kate failed to initialize for decoding: %d\n", ret);
+        }
+        else {
+          kate_packet kp;
+          const kate_info *ki = sh_s->k->ki;
+
+          kate_packet_wrap(&kp, pack.bytes, pack.packet);
+	  ret = kate_high_decode_packetin (sh_s->k, &kp, NULL);
+	  if (ret<0)
+          {
+	      mp_msg(MSGT_DEMUX,MSGL_ERR,"Kate header %lld parsing failed: %d\n", pack.packetno, ret);
+          }
+	  else
+	  {
+            mp_msg(MSGT_DEMUX, MSGL_INFO, "[Ogg] stream %d: Kate %d.%d (%s), language \"%s\", -sid %d\n",
+                ogg_d->num_sub,
+                ki->bitstream_version_major, ki->bitstream_version_minor,
+                ki->category ?  ki->category : "no category", 
+                ki->language ? ki->language : "<unset>",
+                ogg_d->n_text);
+	    ogg_d->subs[ogg_d->num_sub].samplerate = ki->gps_numerator / (float)ki->gps_denominator;
+	    ogg_d->subs[ogg_d->num_sub].kate = 1;
+	    ogg_d->subs[ogg_d->num_sub].gshift = ki->granule_shift;
+            ogg_d->subs[ogg_d->num_sub].id = ogg_d->n_text;
+            if (demuxer->sub->id == ogg_d->n_text)
+              text_id = ogg_d->num_sub;
+            ogg_d->n_text++;
+            ogg_d->text_ids = (int *)realloc(ogg_d->text_ids, sizeof(int) * ogg_d->n_text);
+            ogg_d->text_ids[ogg_d->n_text - 1] = ogg_d->num_sub;
+            ogg_d->text_langs = (char **)realloc(ogg_d->text_langs, sizeof(char *) * ogg_d->n_text);
+            ogg_d->text_langs[ogg_d->n_text - 1] = NULL;
+	    if (ki->language) {
+               ogg_d->text_langs[ogg_d->n_text - 1] = strdup(ki->language);
+               sh_s->lang = strdup(ki->language);
+            }
+
+            // check for -slang if subs are uninitialized yet
+            if (ki->language && demuxer->sub->id < 0 && demux_ogg_check_lang(ki->language, dvdsub_lang))
+            {
+	      demuxer->sub->id = ogg_d->n_text-1;
+	      dvdsub_id = ogg_d->n_text-1;
+              mp_msg(MSGT_DEMUX, MSGL_V, "Ogg demuxer: Displaying subtitle stream id %d which matched -slang %s\n", ogg_d->n_text-1, ki->language);
+            }
+          }
+	}
+#   endif /* HAVE_OGGKATE */
     } else if (pack.bytes >= 4 && !strncmp (&pack.packet[0], "fLaC", 4)) {
 	sh_a = new_sh_audio_aid(demuxer,ogg_d->num_sub, n_audio);
 	sh_a->format =  mmioFOURCC('f', 'L', 'a', 'C');
@@ -1052,7 +1153,7 @@
     } else
       mp_msg(MSGT_DEMUX,MSGL_ERR,"Ogg stream %d is of an unknown type\n",ogg_d->num_sub);
 
-    if(sh_a || sh_v) {
+    if(sh_a || sh_v || sh_s) {
       demux_stream_t* ds = NULL;
       if(sh_a) {
 	// If the audio stream is not defined we took the first one
@@ -1081,6 +1182,18 @@
           video_id = ogg_d->num_sub;
 	}
       }
+      if(sh_s) {
+	/// and for text too
+	if(demuxer->sub->id == -1) {
+	  demuxer->sub->id = ogg_d->n_text - 1;
+	}
+	if(demuxer->sub->id == ogg_d->n_text - 1) {
+	  demuxer->sub->sh = sh_s;
+	  //sh_s->ds = demuxer->sub; // has no ds field - we presumably don't need it
+	  ds = demuxer->sub;
+          //sub_id = ogg_d->num_sub;
+	}
+      }
       /// Add the header packets if the stream isn't seekable
       if(ds && !s->end_pos) {
 	/// Finish the page, otherwise packets will be lost
@@ -1209,7 +1322,7 @@
       ds = d->audio;
     else if(id == d->video->id)
       ds = d->video;
-    else if (ogg_d->subs[id].text)
+    else if (ogg_d->subs[id].text || ogg_d->subs[id].kate)
       ds = d->sub;
 
     if(ds) {
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/libmpdemux/demuxer.c mplayer-svn-with-kate/libmpdemux/demuxer.c
--- mplayer-svn/libmpdemux/demuxer.c	2008-03-14 13:26:57.000000000 +0000
+++ mplayer-svn-with-kate/libmpdemux/demuxer.c	2008-06-15 13:38:31.000000000 +0100
@@ -27,6 +27,10 @@
 #include "libass/ass_mp.h"
 #endif
 
+#ifdef HAVE_OGGKATE
+#include <kate/kate.h>
+#endif
+
 extern void resync_video_stream(sh_video_t *sh_video);
 extern void resync_audio_stream(sh_audio_t *sh_audio);
 
@@ -251,6 +255,10 @@
 #ifdef USE_ASS
     if (sh->ass_track) ass_free_track(sh->ass_track);
 #endif
+#ifdef HAVE_OGGKATE
+    kate_high_decode_clear(sh->k);
+    free(sh->k);
+#endif
     free(sh->lang);
     free(sh);
 }
@@ -687,6 +695,53 @@
   return -1;
 }
 
+/*
+   Splits extra data from a single block into kate_packets and decode them.
+*/
+static int
+parse_kate_headers (kate_state *k, void *extradata, size_t extradata_len)
+{
+  int n,nlaces,offset,ret;
+  const unsigned char **header_data;
+  const unsigned char *priv;
+  size_t *header_size;
+
+  if ((extradata == NULL) || (extradata_len == 0))
+    return KATE_E_BAD_PACKET;
+
+  priv = (const unsigned char*)extradata;
+  nlaces = priv[0];
+  header_data=(const unsigned char**)alloca((nlaces+1)*sizeof(const unsigned char*));
+  header_size=(size_t*)alloca((nlaces+1)*sizeof(size_t));
+
+  offset=1;
+  for (n=0;n<nlaces;++n) {
+    header_size[n]=0;
+    do {
+      header_size[n]+=priv[offset];
+    } while (priv[offset++]==255);
+  }
+  header_size[nlaces]=extradata_len-offset;
+  for (n=0;n<nlaces;++n) header_size[nlaces]-=header_size[n];
+  header_data[0]=priv+offset;
+  for (n=1;n<=nlaces;++n) {
+    header_data[n]=header_data[n-1]+header_size[n-1];
+  }
+
+  for (n=0;n<nlaces+1;++n) {
+    kate_packet kp;
+    kate_packet_wrap(&kp,header_size[n],header_data[n]);
+    ret=kate_high_decode_packetin(k,&kp,NULL);
+    if (ret<0) {
+      mp_msg (MSGT_DEMUXER, MSGL_WARN, "kate_high_decode_packetin returned %d\n", ret);
+      kate_high_decode_clear(k);
+      return ret;
+    }
+  }
+
+  return 0;
+}
+
 int extension_parsing=1; // 0=off 1=mixed (used only for unstable formats)
 
 int correct_pts=0;
@@ -843,10 +898,11 @@
     sh_video->i_bps*0.008f,
     sh_video->i_bps/1024.0f );
 }
+
+ for (i = 0; i < MAX_S_STREAMS; ++i) {
+   sh_sub_t* sh = demuxer->s_streams[i];
 #ifdef USE_ASS
- if (ass_enabled && ass_library) {
-   for (i = 0; i < MAX_S_STREAMS; ++i) {
-     sh_sub_t* sh = demuxer->s_streams[i];
+   if (ass_enabled && ass_library) {
      if (sh && sh->type == 'a') {
        sh->ass_track = ass_new_track(ass_library);
        if (sh->ass_track && sh->extradata)
@@ -854,8 +910,36 @@
      } else if (sh && sh->type != 'v')
        sh->ass_track = ass_default_track(ass_library);
    }
- }
 #endif
+#ifdef HAVE_OGGKATE
+   if (sh && sh->type == 'k' && !sh->k) {
+     sh->k = (kate_state*)malloc(sizeof(kate_state));
+     if (sh->k) {
+       int ret;
+       ret = kate_high_decode_init(sh->k);
+       if (ret >= 0) {
+         ret = parse_kate_headers(sh->k, sh->extradata, sh->extradata_len);
+         if (ret >= 0) {
+           /* init success */
+           mp_msg(MSGT_DEMUX,MSGL_V,"Kate init success, language %s, category %s\n",
+               sh->k->ki->language, sh->k->ki->language);
+           if (sh->lang) free(sh->lang);
+           sh->lang = strdup(sh->k->ki->language);
+         }
+         else {
+           mp_msg(MSGT_DEMUX,MSGL_WARN,"Failed to parse kate stream headers: %d\n", ret);
+         }
+       }
+       else {
+         mp_msg(MSGT_DEMUX,MSGL_WARN,"Failed to initialize kate_state: %d\n", ret);
+       }
+     }
+     else {
+       mp_msg(MSGT_DEMUX,MSGL_WARN,"Failed to allocate %u bytes for kate_state\n", sizeof(kate_state));
+     }
+   }
+#endif
+ }
 return demuxer;
 }
 
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/libmpdemux/ebml.h mplayer-svn-with-kate/libmpdemux/ebml.h
--- mplayer-svn/libmpdemux/ebml.h	2008-03-14 13:26:57.000000000 +0000
+++ mplayer-svn-with-kate/libmpdemux/ebml.h	2008-03-15 20:49:21.000000000 +0000
@@ -162,6 +162,7 @@
 #define MATROSKA_SUBTYPE_TEXT      1
 #define MATROSKA_SUBTYPE_SSA       2
 #define MATROSKA_SUBTYPE_VOBSUB    3
+#define MATROSKA_SUBTYPE_KATE      4
 
 #ifndef UINT64_MAX
 #define UINT64_MAX 18446744073709551615ULL
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/libmpdemux/matroska.h mplayer-svn-with-kate/libmpdemux/matroska.h
--- mplayer-svn/libmpdemux/matroska.h	2008-03-14 13:26:57.000000000 +0000
+++ mplayer-svn-with-kate/libmpdemux/matroska.h	2008-03-15 20:49:21.000000000 +0000
@@ -60,6 +60,7 @@
 #define MKV_S_TEXTSSA    "S_TEXT/SSA"
 #define MKV_S_TEXTASS    "S_TEXT/ASS"
 #define MKV_S_VOBSUB     "S_VOBSUB"
+#define MKV_S_KATE       "S_KATE"
 #define MKV_S_SSA        "S_SSA" // Deprecated
 #define MKV_S_ASS        "S_ASS" // Deprecated
 
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/libmpdemux/stheader.h mplayer-svn-with-kate/libmpdemux/stheader.h
--- mplayer-svn/libmpdemux/stheader.h	2008-03-14 13:26:57.000000000 +0000
+++ mplayer-svn-with-kate/libmpdemux/stheader.h	2008-06-15 12:06:20.000000000 +0100
@@ -95,7 +95,7 @@
 
 typedef struct {
   int sid;
-  char type;                    // t = text, v = VobSub, a = SSA/ASS
+  char type;                    // t = text, v = VobSub, a = SSA/ASS, k = kate
   int has_palette;              // If we have a valid palette
   unsigned int palette[16];     // for VobSubs
   int width, height;            // for VobSubs
@@ -107,6 +107,9 @@
 #ifdef USE_ASS
   ass_track_t* ass_track;  // for SSA/ASS streams (type == 'a')
 #endif
+#ifdef HAVE_OGGKATE
+  struct kate_state *k;
+#endif
   char* lang; // track language
 } sh_sub_t;
 
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/libvo/sub.c mplayer-svn-with-kate/libvo/sub.c
--- mplayer-svn/libvo/sub.c	2008-03-14 13:26:58.000000000 +0000
+++ mplayer-svn-with-kate/libvo/sub.c	2008-06-15 13:43:35.000000000 +0100
@@ -26,6 +26,7 @@
 #include "font_load.h"
 #include "sub.h"
 #include "spudec.h"
+#include "katedec.h"
 #include "libavutil/common.h"
 
 #define NEW_SPLITTING
@@ -1022,11 +1023,22 @@
   obj->flags |= OSDFLAG_BBOX;
 }
 
+inline static void vo_update_kate(mp_osd_obj_t* obj, int dxs, int dys)
+{
+  // TODO: update tiger_renderer
+  obj->flags|=OSDFLAG_CHANGED|OSDFLAG_VISIBLE;
+}
+
 inline static void vo_draw_spudec_sub(mp_osd_obj_t* obj, void (*draw_alpha)(int x0, int y0, int w, int h, unsigned char* src, unsigned char* srca, int stride))
 {
   spudec_draw_scaled(vo_spudec, obj->dxs, obj->dys, draw_alpha);
 }
 
+inline static void vo_draw_katedec_sub(mp_osd_obj_t* obj, void (*draw_alpha)(int x0, int y0, int w, int h, unsigned char* src, unsigned char* srca, int stride))
+{
+  katedec_draw(obj->dxs, obj->dys, draw_alpha);
+}
+
 void *vo_spudec=NULL;
 void *vo_vobsub=NULL;
 
@@ -1146,6 +1158,11 @@
 	    } else
 		obj->flags&=~OSDFLAG_VISIBLE;
 	    break;
+#ifdef HAVE_OGGKATE
+        case OSDTYPE_KATE:
+           vo_update_kate(obj,dxs,dys);
+           break;
+#endif
 	}
 	// check bbox:
 	if(!(obj->flags&OSDFLAG_BBOX)){
@@ -1198,6 +1215,9 @@
 #if HAVE_TV_TELETEXT
     new_osd_obj(OSDTYPE_TELETEXT);
 #endif
+#if HAVE_OGGKATE
+    new_osd_obj(OSDTYPE_KATE);
+#endif
 #ifdef HAVE_FREETYPE
     force_load_font = 1;
 #endif
@@ -1244,6 +1264,11 @@
 	case OSDTYPE_PROGBAR:
 	    vo_draw_text_from_buffer(obj,draw_alpha);
 	    break;
+#ifdef HAVE_OGGKATE
+        case OSDTYPE_KATE:
+	    vo_draw_katedec_sub(obj, draw_alpha);
+	    break;
+#endif
 	}
 	obj->old_bbox=obj->bbox;
 	obj->flags|=OSDFLAG_OLD_BBOX;
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/libvo/sub.h mplayer-svn-with-kate/libvo/sub.h
--- mplayer-svn/libvo/sub.h	2008-03-14 13:26:58.000000000 +0000
+++ mplayer-svn-with-kate/libvo/sub.h	2008-06-15 13:43:37.000000000 +0100
@@ -12,6 +12,7 @@
 #define OSDTYPE_SPU 4
 #define OSDTYPE_DVDNAV 5
 #define OSDTYPE_TELETEXT 6
+#define OSDTYPE_KATE 7
 
 #define OSDFLAG_VISIBLE 1
 #define OSDFLAG_CHANGED 2
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/mpcommon.c mplayer-svn-with-kate/mpcommon.c
--- mplayer-svn/mpcommon.c	2008-03-14 13:27:00.000000000 +0000
+++ mplayer-svn-with-kate/mpcommon.c	2008-06-15 12:23:40.000000000 +0100
@@ -20,6 +20,10 @@
 ass_track_t* ass_track = 0; // current track to render
 #endif
 
+#ifdef HAVE_OGGKATE
+#include "katedec.h"
+#endif
+
 sub_data* subdata = NULL;
 subtitle* vo_sub_last = NULL;
 
@@ -39,6 +43,7 @@
             spudec_reset(vo_spudec);
             vo_osd_changed(OSDTYPE_SPU);
         }
+        katedec_reset();
     }
     // find sub
     if (subdata) {
@@ -100,6 +105,24 @@
 
         if (spudec_changed(vo_spudec))
             vo_osd_changed(OSDTYPE_SPU);
+    } else if (dvdsub_id >= 0 && type == 'k') {
+	double curpts = sh_video->pts + sub_delay;
+	double endpts;
+        sh_sub_t* sh = d_dvdsub->sh;
+	vo_sub = &subs;
+	while (d_dvdsub->first) {
+	    double pts = ds_get_next_pts(d_dvdsub);
+	    if (pts > curpts)
+		break;
+	    endpts = d_dvdsub->first->endpts;
+	    len = ds_get_packet_sub(d_dvdsub, &packet);
+	    if (pts != MP_NOPTS_VALUE) {
+                katedec_decode(sh, sh_video, &subs, len, packet);
+	    }
+	}
+	if (sub_clear_text(&subs, curpts))
+	    vo_osd_changed(OSDTYPE_SUBTITLE);
+	katedec_tick(sh, curpts);
     } else if (dvdsub_id >= 0 && (type == 't' || type == 'm' || type == 'a')) {
         double curpts = sh_video->pts + sub_delay;
         double endpts;
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/mplayer.c mplayer-svn-with-kate/mplayer.c
--- mplayer-svn/mplayer.c	2008-03-14 13:27:00.000000000 +0000
+++ mplayer-svn-with-kate/mplayer.c	2008-06-15 13:41:09.000000000 +0100
@@ -1115,6 +1115,15 @@
     forced_subs_only = mkv_sh_sub->forced_subs_only;
   }
 
+  if ((vo_spudec == NULL) &&
+      (mpctx->demuxer->type == DEMUXER_TYPE_OGG || mpctx->demuxer->type == DEMUXER_TYPE_MATROSKA) &&
+      (mpctx->d_sub->sh != NULL) && (((sh_sub_t *)mpctx->d_sub->sh)->type == 'k')) {
+    sh_sub_t *sh_sub = (sh_sub_t *)mpctx->d_sub->sh;
+    current_module = "spudec_init_kate";
+    vo_spudec = spudec_new_scaled(sh_sub->palette, sh_sub->width, sh_sub->height);
+    forced_subs_only = sh_sub->forced_subs_only;
+  }
+
   if (vo_spudec==NULL) {
     sh_sub_t *sh = (sh_sub_t *)mpctx->d_sub->sh;
     unsigned int *palette = NULL;
@@ -3475,6 +3484,9 @@
         case 7: dump_microdvd(subdata, mpctx->sh_video->fps); break;
         case 8: dump_jacosub(subdata, mpctx->sh_video->fps); break;
         case 9: dump_sami(subdata, mpctx->sh_video->fps); break;
+#ifdef HAVE_OGGKATE
+        case 10: dump_oggkate(subdata, mpctx->sh_video->fps); break;
+#endif
     }
 }
 
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/subreader.c mplayer-svn-with-kate/subreader.c
--- mplayer-svn/subreader.c	2008-03-14 13:27:01.000000000 +0000
+++ mplayer-svn-with-kate/subreader.c	2008-06-14 21:03:52.000000000 +0100
@@ -24,6 +24,12 @@
 #include <enca.h>
 #endif
 
+#ifdef HAVE_OGGKATE
+#include <ogg/ogg.h>
+#include <kate/kate.h>
+#include <kate/oggkate.h>
+#endif
+
 #define ERR ((void *) -1)
 
 #ifdef USE_ICONV
@@ -236,13 +242,13 @@
 }
 
 
-static char *sub_readtext(char *source, char **dest) {
+static const char *sub_readtext2(const char *source, char **dest, int pipe_is_eol) {
     int len=0;
-    char *p=source;
+    const char *p=source;
     
 //    printf("src=%p  dest=%p  \n",source,dest);
 
-    while ( !eol(*p) && *p!= '|' ) {
+    while ( !eol(*p) && (!pipe_is_eol || *p!= '|') ) {
 	p++,len++;
     }
     
@@ -252,16 +258,20 @@
     strncpy(*dest, source, len);
     (*dest)[len]=0;
     
-    while (*p=='\r' || *p=='\n' || *p=='|') p++;
+    while (*p=='\r' || *p=='\n' || (*p=='|' && pipe_is_eol)) p++;
     
     if (*p) return p;  // not-last text field
     else return NULL;  // last text field
 }
 
+static const char *sub_readtext(const char *source, char **dest) {
+  return sub_readtext2(source, dest, 1);
+}
+
 static subtitle *sub_read_line_microdvd(stream_t *st,subtitle *current) {
     char line[LINE_LEN+1];
     char line2[LINE_LEN+1];
-    char *p, *next;
+    const char *p, *next;
     int i;
 
     do {
@@ -289,7 +299,7 @@
 static subtitle *sub_read_line_mpl2(stream_t *st,subtitle *current) {
     char line[LINE_LEN+1];
     char line2[LINE_LEN+1];
-    char *p, *next;
+    const char *p, *next;
     int i;
 
     do {
@@ -312,6 +322,118 @@
     return current;
 }
 
+static subtitle *sub_read_line_oggkate(stream_t *st,subtitle *current) {
+    int ret;
+    char *buffer;
+    size_t bytes;
+    const char *next;
+    int i;
+
+    enum { uninitialized, header_info, data };
+
+    static int ogg_init=0;
+    static int init=uninitialized;
+    static ogg_sync_state sync;
+    static ogg_stream_state os;
+    static ogg_page og;
+    static ogg_packet op;
+    static kate_state k;
+    static kate_info ki;
+    static kate_comment kc;
+
+    if (!ogg_init) {
+      ogg_init=1;
+      ogg_sync_init(&sync);
+    }
+
+    while (1) {
+      /* first, get a packet if we can */
+      ret=ogg_stream_packetout(&os,&op);
+      if (ret>0) {
+        /* we have a packet */
+        if (init<data) {
+          ret=kate_ogg_decode_headerin(&ki,&kc,&op);
+          if (ret>=0) {
+            if (ret>0) {
+              kate_info_remove_markup(&ki,1);
+              kate_decode_init(&k,&ki);
+              init=data;
+            }
+          }
+          else {
+            if (init!=uninitialized) {
+              kate_info_clear(&ki);
+              kate_comment_clear(&kc);
+            }
+            init=uninitialized;
+          }
+        }
+        else {
+          ret=kate_ogg_decode_packetin(&k,&op);
+          if (ret==0) {
+            const kate_event *ev=NULL;
+            ret=kate_decode_eventout(&k,&ev);
+            if (!ret) {
+              current->start=(int64_t)(ev->start_time)*100;
+              current->end=(int64_t)(ev->start_time+ev->duration)*100;
+#if 0
+              char *line=malloc(ev->len0);
+              memcpy(line,ev->text,ev->len0);
+              current->text[0]=line;
+              current->lines=1;
+#else
+    next=ev->text, i=0;
+    while ((next =sub_readtext2 (next, &(current->text[i]), 0))) {
+        if (current->text[i]==ERR) {return ERR;}
+	i++;
+	if (i>=SUB_MAX_TEXT) { mp_msg(MSGT_SUBREADER,MSGL_WARN,"Too many lines in a subtitle\n");current->lines=i;return current;}
+    }
+    current->lines= ++i;
+#endif
+              break;
+            }
+          }
+        }
+        continue;
+      }
+      /* no packets to be had, read more */
+      ret=ogg_sync_pageout(&sync,&og);
+      if (ret>0) {
+        if (ogg_page_bos(&og)) {
+          if (init==uninitialized) {
+            ogg_stream_init(&os,ogg_page_serialno(&og));
+            kate_info_init(&ki);
+            kate_comment_init(&kc);
+            init=header_info;
+          }
+        }
+        ret=ogg_stream_pagein(&os,&og);
+        if (ret<0) {
+          continue;
+        }
+        continue;
+      }
+      else if (ret<0) {
+        continue;
+      }
+      /* read more data */
+      buffer=ogg_sync_buffer(&sync,4096);
+      if (!buffer) break;
+      bytes=stream_read(st,buffer,4096);
+      if (bytes==0) {
+        ogg_stream_clear(&os);
+        ogg_sync_clear(&sync);
+        ogg_init=0;
+        /* end of file */
+        return NULL;
+      }
+      ogg_sync_wrote(&sync,bytes);
+      continue;
+    }
+
+    return current;
+}
+
 static subtitle *sub_read_line_subrip(stream_t* st, subtitle *current) {
     char line[LINE_LEN+1];
     int a1,a2,a3,a4,b1,b2,b3,b4;
@@ -430,7 +552,8 @@
 static subtitle *sub_read_line_vplayer(stream_t *st,subtitle *current) {
 	char line[LINE_LEN+1];
 	int a1,a2,a3;
-	char *p=NULL, *next,separator;
+	const char *p=NULL, *next;
+        char separator;
 	int i,len,plen;
 
 	while (!current->text[0]) {
@@ -479,7 +602,7 @@
 	// WARNING: full XML parses can be required for proper parsing 
     char line[LINE_LEN+1];
     int a1,a2,a3,a4,b1,b2,b3,b4;
-    char *p=NULL,*next=NULL;
+    const char *p=NULL,*next=NULL;
     int i,len,plen;
     
     while (!current->text[0]) {
@@ -709,7 +832,7 @@
 
 static subtitle *sub_read_line_aqt(stream_t *st,subtitle *current) {
     char line[LINE_LEN+1];
-    char *next;
+    const char *next;
     int i;
 
     while (1) {
@@ -767,7 +890,7 @@
 static subtitle *sub_read_line_subrip09(stream_t *st,subtitle *current) {
     char line[LINE_LEN+1];
     int a1,a2,a3;
-    char * next=NULL;
+    const char * next=NULL;
     int i,len;
    
     while (1) {
@@ -1060,6 +1183,17 @@
 		{*uses_time=0; return SUB_AQTITLE;}
 	if (sscanf (line, "[%d:%d:%d]", &i, &i, &i)==3)
 		{*uses_time=1;return SUB_SUBRIP09;}
+        /* We test for the OggS capture pattern, as the Kate track might be
+           well away from the start of the stream (eg, if it is multiplexed
+           with video and/or skeleton) so other bits above (like that bloody
+           RT hair trigger) would go off wrongly. Ideally, the bit of code
+           below would be better, since that's the Kate signature. */
+	if (!memcmp(line, "OggS", 4))
+		{*uses_time=1;return SUB_KATE;}
+        /*
+        if ((ptr=strstr(line,"\200kate")) && !memcmp(ptr,"\200kate\0\0\0",8))
+		{*uses_time=1;return SUB_KATE;}
+                */
     }
 
     return SUB_INVALID;  // too many bad lines
@@ -1351,7 +1485,8 @@
 	    { sub_read_line_subviewer2, NULL, "subviewer 2.0" },
 	    { sub_read_line_subrip09, NULL, "subrip 0.9" },
 	    { sub_read_line_jacosub, NULL, "jacosub" },
-	    { sub_read_line_mpl2, NULL, "mpl2" }
+	    { sub_read_line_mpl2, NULL, "mpl2" },
+	    { sub_read_line_oggkate, NULL, "Kate" }
     };
     struct subreader *srp;
     
@@ -1381,6 +1516,11 @@
 			    break;
 			}
 	    }
+
+            /* Kate is always utf-8 */
+            if (sub_format == SUB_KATE)
+                sub_utf8 = 1;
+
 	    if (k<0) subcp_open(fd);
     }
 #endif
@@ -1488,9 +1628,13 @@
     }
 
     // we do overlap if the user forced it (suboverlap_enable == 2) or
-    // the user didn't forced no-overlapsub and the format is Jacosub or Ssa.
+    // the user didn't forced no-overlapsub and the format is Jacosub, Ssa, or Kate.
     // this is because usually overlapping subtitles are found in these formats,
     // while in others they are probably result of bad timing
+
+    /* TODO: Kate also supports overlapping subtitles, but enabling this code makes ALL
+       subtitles overlap even when the timings do not overlap, and I don't understand
+       what this code does, so I'll leave it as is for now */
 if ((suboverlap_enabled == 2) ||
     ((suboverlap_enabled) && ((sub_format == SUB_JACOSUB) || (sub_format == SUB_SSA)))) {
     adjust_subs_time(first, 6.0, fps, 0, sub_num, uses_time);/*~6 secs AST*/
@@ -2003,6 +2147,129 @@
     mp_msg(MSGT_SUBREADER,MSGL_INFO,"Read %i subtitles, %i errors.\n", subd->sub_num, subd->sub_errs);
 }
 
+#ifdef HAVE_OGGKATE
+
+static void flush_page(FILE *f,ogg_stream_state *os)
+{
+  ogg_page og;
+  while (1) {
+    int ret=ogg_stream_flush(os,&og);
+    if (ret==0) break;
+    fwrite(og.header,1,og.header_len,f);
+    fwrite(og.body,1,og.body_len,f);
+  }
+}
+
+static void write_kate_headers(FILE *f,kate_state *k,ogg_stream_state *os,ogg_packet *op)
+{
+  kate_comment kc;
+  kate_comment_init(&kc);
+  while (1) {
+    int ret=kate_ogg_encode_headers(k,&kc,op);
+    if (ret>0) {
+      break;
+    }
+    else if (ret<0) {
+      /* error */
+      perror("write_kate_headers: kate_encode_error");
+      break;
+    }
+    else if (ret==0) {
+      ogg_stream_packetin(os,op);
+    }
+  }
+  flush_page(f,os);
+  kate_comment_clear(&kc);
+}
+
+static void add_to_text(char **text,int *text_size,const char *new_text)
+{
+  size_t current_len=*text?strlen(*text):0;
+  size_t new_text_len=strlen(new_text);
+  size_t needed=current_len+new_text_len+2;
+  if (needed>*text_size) {
+    size_t new_size=needed+256;
+    *text=(char*)realloc(*text,new_size);
+    if (current_len==0) **text=0;
+    *text_size=new_size;
+  }
+  if (*text) strcat(*text,new_text);
+}
+
+void dump_oggkate(sub_data* subd, float fps){
+    int i,j;
+    FILE * fd;
+    subtitle * onesub;
+    unsigned long temp;
+    subtitle *subs = subd->subtitles;
+    char *text=NULL;
+    size_t allocated=0;
+
+    kate_state k;
+    kate_info ki;
+    ogg_packet op;
+    ogg_stream_state os;
+    double t0,t1;
+
+    if (!subd->sub_uses_time && sub_fps == 0)
+	sub_fps = fps;
+    fd=fopen("dumpsub.ogg","w");
+    if(!fd)
+    { 
+	perror("dump_oggkate: fopen");
+	return;
+    }
+
+    kate_info_init(&ki);
+    ki.gps_numerator = 1000;
+    ki.gps_denominator = 1;
+    ki.granule_shift = 32;
+    kate_encode_init(&k,&ki);
+    ogg_stream_init(&os,rand());
+
+    write_kate_headers(fd,&k,&os,&op);
+
+    for(i=0; i < subd->sub_num; i++)
+    {
+        onesub=subs+i;    //=&subs[i];
+
+	temp=onesub->start;
+	if (!subd->sub_uses_time)
+	    temp = temp * 100 / sub_fps;
+	temp -= sub_delay * 100;
+        t0=temp/100.0;
+
+	temp=onesub->end;
+	if (!subd->sub_uses_time)
+	    temp = temp * 100 / sub_fps;
+	temp -= sub_delay * 100;
+        t1=temp/100.0;
+	
+	for(j=0;j<onesub->lines;j++) {
+          if (j) add_to_text(&text,&allocated,"\n");
+          add_to_text(&text,&allocated,onesub->text[j]);
+        }
+
+        kate_ogg_encode_text(&k,t0,t1,text,strlen(text),&op);
+        ogg_stream_packetin(&os,&op);
+
+        flush_page(fd,&os);
+        if (text) *text=0;
+    }
+
+    kate_ogg_encode_finish(&k,-1,&op);
+    ogg_stream_packetin(&os,&op);
+    flush_page(fd,&os);
+    ogg_stream_clear(&os);
+    kate_clear(&k);
+
+    free(text);
+
+    fclose(fd);
+    mp_msg(MSGT_SUBREADER,MSGL_INFO,"SUB: Kate format subtitles dumped in \'dumpsub.ogg\'.\n");
+}
+#endif
+
 void dump_srt(sub_data* subd, float fps){
     int i,j;
     int h,m,s,ms;
diff -ruN -x 'config.*' -x configure.log -x '*.o' -x allformats.c -x vidix -x codecs.conf.h -x version.h -x help_mp.h mplayer-svn/subreader.h mplayer-svn-with-kate/subreader.h
--- mplayer-svn/subreader.h	2008-03-14 13:27:01.000000000 +0000
+++ mplayer-svn-with-kate/subreader.h	2008-06-14 21:03:10.000000000 +0100
@@ -23,6 +23,7 @@
 #define SUB_SUBRIP09 11
 #define SUB_JACOSUB  12
 #define SUB_MPL2     13
+#define SUB_KATE     14
 
 // One of the SUB_* constant above
 extern int sub_format;
@@ -78,6 +79,9 @@
 char ** sub_filenames(const char *path, char *fname);
 void list_sub_file(sub_data* subd);
 void dump_srt(sub_data* subd, float fps);
+#ifdef HAVE_OGGKATE
+void dump_oggkate(sub_data* subd, float fps);
+#endif
 void dump_mpsub(sub_data* subd, float fps);
 void dump_microdvd(sub_data* subd, float fps);
 void dump_jacosub(sub_data* subd, float fps);
